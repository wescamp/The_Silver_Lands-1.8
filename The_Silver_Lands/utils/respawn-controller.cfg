#textdomain wesnoth-The_Silver_Lands
# $Id: respawn-controller.cfg 5495 2009-10-07 00:46:41Z espreon $

#define HIVE_SPAWN_SPAWN_INTERNAL TYPE_LIST SIDE X Y IS_GUARDIAN
    [set_variable]
        name=serialized_IS_GUARDIAN
        value={IS_GUARDIAN}
    [/set_variable]

    [set_variable]
        name=hivespawn_gen.type
        rand={TYPE_LIST}
    [/set_variable]
    [set_variable]
        name=hivespawn_gen.facing
        rand="{DIRECTION_ALL}"
    [/set_variable]

    [set_variables]
        name=hivespawn_gen
        mode=merge
        [value]
            id=hivespawn_{X}_{Y}
            side={SIDE}
            x,y={X},{Y}
            random_traits=yes
        [/value]
    [/set_variables]

    [if]
        [variable]
            name="serialized_IS_GUARDIAN"
            boolean_equals="yes"
        [/variable]
        [then]
            [set_variable]
                name=hivespawn_gen.ai.vars.guard_radius
                rand={DARKHIVE_DRONE_AI_RANDOM_RADIUS}
            [/set_variable]

            [set_variables]
                name=hivespawn_gen
                mode=merge
                [value]
                    ai_special=guardian
                    [ai]
                        formula="{INCLUDE_LOCAL /ai/formula/dark-hive-drone-guardian.formula}"
                        [vars]
                            guard_loc="loc( {X} , {Y} )"
                        [/vars]
                    [/ai]
                [/value]
            [/set_variables]
        [/then]
    [/if]

    {LOG_TSL "hive spawn: loc=($hivespawn_gen.x|, $hivespawn_gen.y|) type=$hivespawn_gen.type facing=$hivespawn_gen.facing ai.vars.guard_radius=$hivespawn_gen.ai.vars.guard_radius"}

    [unstore_unit]
        find_vacant=yes
        variable=hivespawn_gen
    [/unstore_unit]

    [clear_variable]
        name=hivespawn_gen,serialized_IS_GUARDIAN
    [/clear_variable]
#enddef

#define HIVE_SPAWN_SPAWN _TYPES _SIDE _X _Y _IS_GUARDIAN
    [if]
        [variable]
            name="__uu_shaxthal_in_surface"
            boolean_not_equals="yes"
        [/variable]
        [then]
            {HIVE_SPAWN_SPAWN_INTERNAL ({_TYPES}) ({_SIDE}) ({_X}) ({_Y}) ({_IS_GUARDIAN})}
        [/then]
        [else]
            [set_variable]
                name=hivespawn_gen.variation
                value="surface"
            [/set_variable]

            {HIVE_SPAWN_SPAWN_INTERNAL ({_TYPES}) ({_SIDE}) ({_X}) ({_Y}) ({_IS_GUARDIAN})}

            {LOG_TSL "applied surface variation"}
        [/else]
    [/if]
#enddef

#define HIVE_SPAWN_ONCE_POINT _TYPES _SIDE _X _Y _IS_GUARDIAN
    [event]
        name=prestart
        {LOG_TSL "setting up one-time spawn point at ({_X},{_Y}); _IS_GUARDIAN={IS_GUARDIAN}..."}

        {HIVE_SPAWN_SPAWN ({_TYPES}) ({_SIDE}) ({_X}) ({_Y}) ({_IS_GUARDIAN})}
    [/event]
#enddef

#define HIVE_RESPAWN_EVENTS TYPES SIDE X Y RESPAWN RESPAWN_TIMEOUT GUARDIAN_MODE
    [event]
        name=hive respawn {X} {Y}
        first_time_only=no
        {HIVE_SPAWN_SPAWN ({TYPES}) ({SIDE}) ({X}) ({Y}) ({GUARDIAN_MODE})}
    [/event]

    [event]
        name=die
        first_time_only=no
        [filter]
            id=hivespawn_{X}_{Y}
        [/filter]

        [set_variable]
            name=chance_to_continue
            rand=0..100
        [/set_variable]

        [set_variable]
            name=chance_to_continue
            modulo=23
        [/set_variable]

        [set_variable]
            name=respawn_flag
            value={RESPAWN}
        [/set_variable]

        [if]
            [variable]
                name=chance_to_continue
                numerical_not_equals=0
            [/variable]
            [and]
                [variable]
                    name=respawn_flag
                    boolean_equals=yes
                [/variable]
            [/and]
            [then]
                {LOG_TSL "respawn point ({X}, {Y}) reactivating in {RESPAWN_TIMEOUT} turns"}
                #
                # Generate a respawn event dynamically
                #
                [set_variables]
                    name=respawn_event_WML
                    [value]
                        name="turn $($turn_number + {RESPAWN_TIMEOUT})"
                        [fire_event]
                            name=hive respawn {X} {Y}
                        [/fire_event]
                    [/value]
                [/set_variables]

                [insert_tag]
                    name=event
                    variable=respawn_event_WML
                [/insert_tag]

                [clear_variable]
                    name=respawn_event_WML
                [/clear_variable]
            [/then]
            [else]
            [/else]
        [/if]
        [clear_variable]
            name=chance_to_continue,respawn_flag
        [/clear_variable]
    [/event]
#enddef

# Variant of {HIVE_SPAWN_POINT} that should be called from inside an event; useful for
# creating spawn points only when required
#define PUT_HIVE_SPAWN_POINT TYPES SIDE X Y RESPAWN RESPAWN_TIMEOUT GUARDIAN_MODE
    [set_variable]
        name=serialized_GUARDIAN_MODE
        value={GUARDIAN_MODE}
    [/set_variable]
    [set_variable]
        name=temp_guardian_first_time
        value=no
    [/set_variable]
    [set_variable]
        name=temp_guardian_later
        value=no
    [/set_variable]

    [switch]
        variable=serialized_GUARDIAN_MODE
        [case]
            value=first_time_only
            [set_variable]
                name=temp_guardian_first_time
                value=yes
            [/set_variable]
            [set_variable]
                name=temp_guardian_later
                value=no
            [/set_variable]
        [/case]
        [case]
            value=not_first_time
            [set_variable]
                name=temp_guardian_first_time
                value=no
            [/set_variable]
            [set_variable]
                name=temp_guardian_later
                value=yes
            [/set_variable]
        [/case]
        [default]
            [set_variable]
                name=temp_guardian_first_time
                value=$serialized_GUARDIAN_MODE
            [/set_variable]
            [set_variable]
                name=temp_guardian_later
                value=$serialized_GUARDIAN_MODE
            [/set_variable]
        [/default]
    [/switch]

    {LOG_TSL "setting up respawn point at ({X},{Y}); guardian_first_time=$temp_guardian_first_time|; guardian_later=$temp_guardian_later..."}

    {HIVE_SPAWN_SPAWN ({TYPES}) ({SIDE}) ({X}) ({Y}) ($temp_guardian_first_time)}

    {HIVE_RESPAWN_EVENTS ({TYPES}) ({SIDE}) ({X}) ({Y}) ({RESPAWN}) ({RESPAWN_TIMEOUT}) ($temp_guardian_later)}

    [clear_variable]
        name=temp_guardian_first_time,temp_guardian_later,serialized_GUARDIAN_MODE
    [/clear_variable]
#enddef

#define HIVE_SPAWN_POINT TYPES SIDE X Y RESPAWN RESPAWN_TIMEOUT
    [event]
        name=prestart
        {LOG_TSL "setting up initial respawn point at ({X},{Y}); GUARDIAN_MODE=yes..."}

        {HIVE_SPAWN_SPAWN ({TYPES}) ({SIDE}) ({X}) ({Y}) (yes)}
    [/event]

    {HIVE_RESPAWN_EVENTS ({TYPES}) ({SIDE}) ({X}) ({Y}) ({RESPAWN}) ({RESPAWN_TIMEOUT}) (yes)}
#enddef
